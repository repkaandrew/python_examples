"""
1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами
на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""
import random


def bubble_sort_reversed(ary):
	"""
	Сортировка пузырьком в обратном порядке
	Сортировка выполняется за один проход, к стандартному методу добавил отброс переставленного элемента максимально
	вначало списка
	:param ary: list
	:return: list
	"""
	for i in range(len(ary) - 1):
		if ary[i] < ary[i + 1]:
			ary[i + 1], ary[i] = ary[i], ary[i + 1]
			j = i
			while j > 0 and ary[j] > ary[j - 1]:
				ary[j - 1], ary[j] = ary[j], ary[j - 1]
				j -= 1
	return ary


def main():
	ary = [random.randrange(-100, 100) for _ in range(200)]
	print(ary)
	res_ary = bubble_sort_reversed(ary[:])
	print(res_ary)
	print(f'Правильность сортировки - {sorted(ary, reverse=True) == res_ary}')


if __name__ == '__main__':
	main()
